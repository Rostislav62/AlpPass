import React from "react"; /* Импорт React для создания компонента */
import { Link } from "react-router-dom"; /* Импорт компонента Link из react-router-dom для навигации */
import "../index.css"; /* Импорт глобальных стилей из файла index.css, находящегося на уровень выше */

/* Определение интерфейса пропсов для компонента HomePage */
interface HomePageProps {
    darkMode: boolean; /* Пропс darkMode для указания текущей темы (true - тёмная, false - светлая) */
    toggleTheme: () => void; /* Пропс toggleTheme для переключения темы, функция без аргументов и возвращаемого значения */
}

/* Определение компонента HomePage как функционального компонента с использованием интерфейса пропсов */
const HomePage: React.FC<HomePageProps> = ({ darkMode, toggleTheme }) => {
    return ( /* Начало возвращаемого JSX для рендеринга компонента */
        <div className={`container ${darkMode ? "dark-mode" : "light-mode"}`}> {/* Главный контейнер с классом container и динамическим классом темы в зависимости от darkMode */}
            <header className="header"> {/* Заголовок страницы с классом header для стилизации */}
                <img src="/images/homepage-banner.png" alt="Горный маршрут" /> {/* Изображение баннера с путем из public и альтернативным текстом */}
            </header> {/* Закрывающий тег для заголовка */}
            <main className="main"> {/* Основной контент страницы с классом main для стилизации */}
                <h1>Добро пожаловать в AlpPass!</h1> {/* Заголовок первого уровня с приветственным текстом */}
                <p> {/* Абзац для описания приложения */}
                    Приложение для альпинистов и туристов. <br /> {/* Первая строка текста с переносом строки */}
                    Находите перевалы, регистрируйте маршруты, сохраняйте свои достижения. {/* Вторая строка текста */}
                </p> {/* Закрывающий тег для абзаца */}
            </main> {/* Закрывающий тег для основного контента */}
            <footer className="footer"> {/* Нижняя часть страницы с классом footer для стилизации */}
                <Link to="/register"> {/* Ссылка на страницу регистрации с использованием компонента Link */}
                    <button className="register-btn">Зарегистрироваться</button> {/* Кнопка "Зарегистрироваться" с классом register-btn для стилизации */}
                </Link> {/* Закрывающий тег для ссылки на регистрацию */}
                <Link to="/login" className="login-link"> {/* Ссылка на страницу логина с классом login-link для стилизации */}
                    Войти {/* Текст ссылки "Войти" */}
                </Link> {/* Закрывающий тег для ссылки на логин */}
                <button onClick={toggleTheme} className="theme-btn"> {/* Кнопка переключения темы с обработчиком onClick и классом theme-btn */}
                    {darkMode ? "Светлая тема" : "Тёмная тема"} {/* Условный текст кнопки: "Светлая тема" если darkMode true, иначе "Тёмная тема" */}
                </button> {/* Закрывающий тег для кнопки переключения темы */}
            </footer> {/* Закрывающий тег для нижней части */}
        </div> /* Закрывающий тег для главного контейнера */
    ); /* Конец возвращаемого JSX */
};

export default HomePage; /* Экспорт компонента HomePage как основного для использования в других частях приложения */