// AlpPass/src/pages/AllPass.tsx

import React, { useEffect, useState } from "react"; // –ò–º–ø–æ—Ä—Ç React –∏ —Ö—É–∫–æ–≤
import { useNavigate } from "react-router-dom"; // –ò–º–ø–æ—Ä—Ç useNavigate
import "../index.css"; // –ò–º–ø–æ—Ä—Ç —Å—Ç–∏–ª–µ–π

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–∞–ª–∞
interface Pereval {
    id?: number; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π ID
    pk?: number; // –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π pk
    beautyTitle: string; // –ì–æ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤
    title: string; // –ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞
    other_titles: string; // –î—Ä—É–≥–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    connect: boolean; // –°–≤—è–∑—å
    add_time: string; // –í—Ä–µ–º—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    user: {
        id: number;
        family_name: string;
        first_name: string;
        father_name: string;
        phone: string;
        email: string;
    };
    coord: {
        id: number;
        latitude: number;
        longitude: number;
        height: number;
    };
    status: number; // –°—Ç–∞—Ç—É—Å
    difficulties: { season: number; difficulty: number }[]; // –°–ª–æ–∂–Ω–æ—Å—Ç–∏
    images: { id: number; data: string; title: string }[]; // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–ø—Å–æ–≤
interface AllPassProps {
    darkMode: boolean; // –¢—ë–º–Ω–∞—è —Ç–µ–º–∞
    toggleTheme: () => void; // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
}

// –ë–∞–∑–æ–≤—ã–π URL API
const API_URL = process.env.REACT_APP_API_URL || "https://rostislav62.pythonanywhere.com"; // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π URL

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç AllPass
const AllPass: React.FC<AllPassProps> = ({ darkMode, toggleTheme }) => {
    const [perevals, setPerevals] = useState<Pereval[]>([]); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–≤–∞–ª–æ–≤
    const [errorMessage, setErrorMessage] = useState<string | null>(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—à–∏–±–∫–∏
    const navigate = useNavigate(); // –•—É–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏

    useEffect(() => { // –•—É–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
        fetch(`${API_URL}/api/submitData/list/`) // –ó–∞–ø—Ä–æ—Å –∫ API
            .then(response => response.json()) // –ü–∞—Ä—Å–∏–º JSON
            .then((data: Pereval[]) => {
                console.log("üì• –û—Ç–≤–µ—Ç –æ—Ç /api/submitData/list/:", data); // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
                if (!Array.isArray(data)) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–∞—Å—Å–∏–≤ –ª–∏ –¥–∞–Ω–Ω—ã–µ
                    setErrorMessage("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É
                    return;
                }
                if (data.length > 0) { // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å
                    console.log("–ü–µ—Ä–≤—ã–π –ø–µ—Ä–µ–≤–∞–ª:", data[0]); // –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–≤—ã–π –æ–±—ä–µ–∫—Ç
                }
                setPerevals(data); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–≤–∞–ª—ã
            })
            .catch(error => { // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–≤–∞–ª–æ–≤:", error); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
                setErrorMessage("–û—à–∏–±–∫–∞ —Å–µ—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            });
    }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ ‚Äî —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

    const handleRowClick = (pereval: Pereval) => { // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å—Ç—Ä–æ–∫–µ
        const perevalId = pereval.id ?? pereval.pk; // –ò—Å–ø–æ–ª—å–∑—É–µ–º id –∏–ª–∏ pk
        console.log("–ö–ª–∏–∫ –ø–æ –ø–µ—Ä–µ–≤–∞–ª—É:", pereval.title, "ID:", perevalId); // –õ–æ–≥–∏—Ä—É–µ–º –∫–ª–∏–∫
        if (perevalId === undefined) { // –ï—Å–ª–∏ ID –Ω–µ—Ç
            console.error("ID –ø–µ—Ä–µ–≤–∞–ª–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω!"); // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            setErrorMessage("–û—à–∏–±–∫–∞: ID –ø–µ—Ä–µ–≤–∞–ª–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –¥–∞–Ω–Ω—ã—Ö"); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            return;
        }
        navigate(`/pereval/${perevalId}`); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–µ—Ç–∞–ª–µ–π
    };

    return ( // JSX –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
        <div className={`allpass-container ${darkMode ? "dark-mode" : "light-mode"}`}> {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ç–µ–º–æ–π */}
            <h1 className="allpass-title">–í—Å–µ –ø–µ—Ä–µ–≤–∞–ª—ã</h1> {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            {errorMessage && ( // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∞
                <p className="error-message">{errorMessage}</p> // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            )}
            <div className="table-wrapper"> {/* –û–±—ë—Ä—Ç–∫–∞ —Ç–∞–±–ª–∏—Ü—ã */}
                <table className="pereval-table"> {/* –¢–∞–±–ª–∏—Ü–∞ */}
                    <thead> {/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */}
                        <tr>
                            <th>–ì–æ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤</th> {/* –ö–æ–ª–æ–Ω–∫–∞ –º–∞—Å—Å–∏–≤–∞ */}
                            <th>–ü–µ—Ä–µ–≤–∞–ª</th> {/* –ö–æ–ª–æ–Ω–∫–∞ –ø–µ—Ä–µ–≤–∞–ª–∞ */}
                        </tr>
                    </thead>
                    <tbody> {/* –¢–µ–ª–æ —Ç–∞–±–ª–∏—Ü—ã */}
                        {perevals.map((p, index) => ( // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –ø–µ—Ä–µ–≤–∞–ª—ã
                            <tr
                                key={`${(p.id ?? p.pk ?? index)}-${index}`} // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á
                                className="pereval-row" // –ö–ª–∞—Å—Å –¥–ª—è —Å—Ç—Ä–æ–∫–∏
                                onClick={() => handleRowClick(p)} // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
                                style={{ cursor: "pointer" }} // –ö—É—Ä—Å–æ—Ä —É–∫–∞–∑–∞—Ç–µ–ª—è
                            >
                                <td>{p.beautyTitle}</td> {/* –ì–æ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ */}
                                <td>{p.title}</td> {/* –ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≤–∞–ª–∞ */}
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
            <button onClick={toggleTheme} className="theme-btn"> {/* –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —Ç–µ–º—ã */}
                {darkMode ? "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞" : "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞"} {/* –¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ */}
            </button>
        </div>
    );
};

export default AllPass; // –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞