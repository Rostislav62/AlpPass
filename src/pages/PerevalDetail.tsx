// AlpPass/src/pages/PerevalDetail.tsx

import React, { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import { loadImages } from "../utils/loadImages";
import { ImageData } from "./EditPereval";
import "../index.css";

// üìå –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–ø—Å–æ–≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
interface PerevalDetailProps {
  darkMode: boolean;
  toggleTheme: () => void;
}

// üìå –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–∞–ª–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–º
interface PerevalData {
  id: number;
  beautyTitle: string;
  title: string;
  other_titles: string;
  connect: boolean;
  add_time: string;
  user: {
    id: number;
    family_name: string;
    first_name: string;
    father_name: string;
    phone: string;
    email: string;
  };
  coord: {
    id: number;
    latitude: number;
    longitude: number;
    height: number;
  };
  status: number;
  difficulties: {
    season: { code: string; name: string };
    difficulty: { code: string; description: string; characteristics: string; requirements: string };
  }[];
  images: { id: number; data: string; title: string }[];
  route_description: string;
}

// üìå –ë–∞–∑–æ–≤—ã–µ URL –¥–ª—è API –∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤
const BASE_URL = "https://rostislav62.pythonanywhere.com";
const API_URL = `${BASE_URL}/api/submitData/`;
const MEDIA_URL = `${BASE_URL}/media/`;

// üìå –ö–æ–º–ø–æ–Ω–µ–Ω—Ç PerevalDetail –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–µ–≤–∞–ª–µ
const PerevalDetail: React.FC<PerevalDetailProps> = ({ darkMode, toggleTheme }) => {
  const { id } = useParams<{ id: string }>();
  const [pereval, setPereval] = useState<PerevalData | null>(null);
  const [images, setImages] = useState<(ImageData | null)[]>([null, null, null]); // üìå –•—Ä–∞–Ω–∏–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [activeTab, setActiveTab] = useState<"–ü–æ–¥—ä—ë–º" | "–°–µ–¥–ª–æ–≤–∏–Ω–∞" | "–°–ø—É—Å–∫">("–°–µ–¥–ª–æ–≤–∏–Ω–∞");
  const [modalImage, setModalImage] = useState<string | null>(null);

  // üìå –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–∞–ª–∞ –∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
  useEffect(() => {
    const fetchPereval = async () => {
      try {
        console.log(`üì• –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–≤–∞–ª–∞ ID ${id}`);
        const response = await fetch(`${API_URL}${id}/info/`);
        if (!response.ok) {
          throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${response.status}`);
        }
        const data = await response.json();
        console.log("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);

        // üìå –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ —Å–ª–æ—Ç–∞–º (–ü–æ–¥—ä—ë–º, –°–µ–¥–ª–æ–≤–∏–Ω–∞, –°–ø—É—Å–∫) —Å –ø–æ–º–æ—â—å—é loadImages
        const loadedImages = loadImages(data.images);
        setImages(loadedImages);
        setPereval(data);
        setLoading(false);
      } catch (err) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", err);
        setError(`–û—à–∏–±–∫–∞: ${(err as Error).message}`);
        setLoading(false);
      }
    };

    fetchPereval();
  }, [id]);

  // üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫ (–ü–æ–¥—ä—ë–º, –°–µ–¥–ª–æ–≤–∏–Ω–∞, –°–ø—É—Å–∫)
  const handleTabClick = (tab: "–ü–æ–¥—ä—ë–º" | "–°–µ–¥–ª–æ–≤–∏–Ω–∞" | "–°–ø—É—Å–∫") => {
    console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tab}`);
    setActiveTab(tab);
  };

  // üìå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ñ–æ—Ç–æ
  const handleImageClick = (imageUrl: string | null) => {
    console.log(imageUrl ? `üîç –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ç–æ: ${imageUrl}` : "üîç –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞");
    setModalImage(imageUrl);
  };

  // üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (loading) {
    return <div className={`pereval-container ${darkMode ? "dark-mode" : "light-mode"}`}>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  }

  // üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
  if (error) {
    return <div className={`pereval-container ${darkMode ? "dark-mode" : "light-mode"}`}>{error}</div>;
  }

  // üìå –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
  if (!pereval) {
    return <div className={`pereval-container ${darkMode ? "dark-mode" : "light-mode"}`}>–ü–µ—Ä–µ–≤–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;
  }

  // üìå –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–∞–ª–∞
  const formattedDate = new Date(pereval.add_time).toLocaleDateString();

  // üìå –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ images
  const tabImages = {
    –ü–æ–¥—ä—ë–º: images[0]?.preview || null, // üìå –ò—Å–ø–æ–ª—å–∑—É–µ–º preview –∏–∑ ImageData
    –°–µ–¥–ª–æ–≤–∏–Ω–∞: images[1]?.preview || null,
    –°–ø—É—Å–∫: images[2]?.preview || null,
  };
  const currentImage = tabImages[activeTab];

  // üìå JSX –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  return (
    <div className={`pereval-container ${darkMode ? "dark-mode" : "light-mode"}`}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="pereval-header">
        <div className="pereval-title">
          <span className="pereval-name">–ø–µ—Ä. {pereval.title}</span>
          <span className="pereval-difficulty">{pereval.difficulties[0]?.difficulty.code || "–ù–µ —É–∫–∞–∑–∞–Ω–æ"}</span>
          <span className="pereval-height">{pereval.coord.height}–º</span>
        </div>
        <p className="pereval-date">{formattedDate}</p>
      </div>

      {/* –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è */}
      <hr className="pereval-divider" />

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div className="pereval-tabs">
        <button
          className={`pereval-tab ${activeTab === "–ü–æ–¥—ä—ë–º" ? "active" : ""}`}
          onClick={() => handleTabClick("–ü–æ–¥—ä—ë–º")}
        >
          –ü–æ–¥—ä—ë–º
        </button>
        <button
          className={`pereval-tab ${activeTab === "–°–µ–¥–ª–æ–≤–∏–Ω–∞" ? "active" : ""}`}
          onClick={() => handleTabClick("–°–µ–¥–ª–æ–≤–∏–Ω–∞")}
        >
          –°–µ–¥–ª–æ–≤–∏–Ω–∞
        </button>
        <button
          className={`pereval-tab ${activeTab === "–°–ø—É—Å–∫" ? "active" : ""}`}
          onClick={() => handleTabClick("–°–ø—É—Å–∫")}
        >
          –°–ø—É—Å–∫
        </button>
      </div>

      {/* –§–æ—Ç–æ */}
      <div className="pereval-photo-container">
        {currentImage ? (
          <div className="pereval-photo">
            <img src={currentImage} alt={activeTab} className="pereval-image" />
            <span className="pereval-coordinates">
              {pereval.coord.latitude}, {pereval.coord.longitude}
            </span>
            <div className="pereval-zoom" onClick={() => handleImageClick(currentImage)}>
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <circle cx="10" cy="10" r="6" stroke="#fff" strokeWidth="2" />
                <path d="M10 7v6m-3 3h6" stroke="#fff" strokeWidth="2" />
                <path d="M14.5 14.5L20 20" stroke="#fff" strokeWidth="2" />
              </svg>
            </div>
          </div>
        ) : (
          <div className="pereval-photo-empty">
            <span>–ù–µ—Ç —Ñ–æ—Ç–æ</span>
          </div>
        )}
      </div>

      {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
      <p className="pereval-description">
        {pereval.route_description || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}
      </p>

      {/* –ü–æ–¥—Ä–æ–±–Ω–µ–µ */}
      <button className="pereval-more">–ü–æ–¥—Ä–æ–±–Ω–µ–µ</button>

      {/* –ö–Ω–æ–ø–∫–∞ —Ç–µ–º—ã */}
      <button onClick={toggleTheme} className="theme-btn">
        {darkMode ? "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞" : "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞"}
      </button>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {modalImage && (
        <div className="pereval-modal" onClick={() => handleImageClick(null)}>
          <img src={modalImage} alt="–£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ" className="pereval-modal-image" />
        </div>
      )}
    </div>
  );
};

export default PerevalDetail;