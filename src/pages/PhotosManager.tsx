// AlpPass/src/pages/PhotosManager.tsx

import React, { useState, useEffect } from "react"; /* –ò–º–ø–æ—Ä—Ç React –∏ —Ö—É–∫–æ–≤ */
import { useParams, useNavigate } from "react-router-dom"; /* –ò–º–ø–æ—Ä—Ç —Ö—É–∫–æ–≤ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
import "../index.css"; /* –ò–º–ø–æ—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π */

/* –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–æ–ø—Å–æ–≤ –¥–ª—è PhotosManager */
interface PhotosManagerProps {
    darkMode: boolean; /* –ü—Ä–æ–ø—Å –¥–ª—è —Ç—ë–º–Ω–æ–π —Ç–µ–º—ã */
    toggleTheme: () => void; /* –ü—Ä–æ–ø—Å –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã */
}

/* –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */
interface ImageData {
    file: File; /* –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */
    preview: string; /* URL –ø—Ä–µ–≤—å—é */
    uploaded: boolean; /* –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ */
}

/* –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–∞–Ω–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ç–æ */
interface Photo {
    id: number; /* ID —Ñ–æ—Ç–æ */
    file_name: string; /* –ò–º—è —Ñ–∞–π–ª–∞ */
    title: string; /* –ù–∞–∑–≤–∞–Ω–∏–µ */
}

/* –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã URL –¥–ª—è API */
const BASE_URL = process.env.REACT_APP_API_URL || "https://rostislav62.pythonanywhere.com"; /* –ë–∞–∑–æ–≤—ã–π URL API */
const IMAGE_API_URL = `${BASE_URL}/api/uploadImage/`; /* URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */
const PHOTOS_API_URL = `${BASE_URL}/api/uploadImage/photos/`; /* URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ */
const DELETE_API_URL = `${BASE_URL}/api/uploadImage/delete/`; /* URL –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ */
const MEDIA_URL = `${BASE_URL}/media/`; /* URL –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ */

/* –ù–∞–∑–≤–∞–Ω–∏—è —Å–ª–æ—Ç–æ–≤ */
const slotLabels = ["–ü–æ–¥—ä—ë–º", "–°–µ–¥–ª–æ–≤–∏–Ω–∞", "–°–ø—É—Å–∫"];

/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç PhotosManager */
const PhotosManager: React.FC<PhotosManagerProps> = ({ darkMode, toggleTheme }) => {
    const { perevalId } = useParams<{ perevalId: string }>(); /* –ü–æ–ª—É—á–µ–Ω–∏–µ ID –ø–µ—Ä–µ–≤–∞–ª–∞ –∏–∑ URL */
    const navigate = useNavigate(); /* –•—É–∫ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */
    const [slots, setSlots] = useState<Array<ImageData | Photo | null>>([null, null, null]); /* –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è 3 —Å–ª–æ—Ç–æ–≤ */
    const [errorMessage, setErrorMessage] = useState<string | null>(null); /* –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—à–∏–±–∫–∏ */
    const [selectedImage, setSelectedImage] = useState<string | null>(null); /* –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ */
    const [showConfirmDelete, setShowConfirmDelete] = useState<number | null>(null); /* –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */
    const [uploading, setUploading] = useState<number | null>(null); /* –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ */

    /* –û—á–∏—Å—Ç–∫–∞ URL.createObjectURL –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–µ–≤—å—é */
    useEffect(() => {
        return () => {
            slots.forEach(slot => {
                if (slot && (slot as ImageData).preview) {
                    URL.revokeObjectURL((slot as ImageData).preview); /* –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–∞–º—è—Ç—å */
                }
            });
        };
    }, [slots]);

    /* –ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö —Ñ–æ—Ç–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ */
    useEffect(() => {
        if (!perevalId) return; /* –ï—Å–ª–∏ ID –Ω–µ—Ç, –ø—Ä–µ—Ä—ã–≤–∞–µ–º */
        fetch(`${PHOTOS_API_URL}${perevalId}/`) /* –ó–∞–ø—Ä–æ—Å –∫ API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ */
            .then(async response => {
                const data = await response.json(); /* –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç */
                console.log("üì• –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (—Ñ–æ—Ç–æ):", data); /* –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ */
                if (!response.ok) throw new Error(data.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ"); /* –û—à–∏–±–∫–∞, –µ—Å–ª–∏ –Ω–µ 200 */
                if (data.state === 1 && Array.isArray(data.photos)) { /* –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö */
                    const newSlots = [null, null, null] as Array<ImageData | Photo | null>; /* –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã */
                    data.photos.forEach((photo: Photo) => {
                        /* –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ç–æ –ø–æ —Å–ª–æ—Ç–∞–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ */
                        const fileName = photo.file_name.toLowerCase();
                        if (fileName.startsWith("1_")) newSlots[0] = photo;
                        else if (fileName.startsWith("2_")) newSlots[1] = photo;
                        else if (fileName.startsWith("3_")) newSlots[2] = photo;
                        else {
                            /* –ï—Å–ª–∏ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –Ω–µ—Ç, –ø–æ–º–µ—â–∞–µ–º –≤ –ø–µ—Ä–≤—ã–π —Å–≤–æ–±–æ–¥–Ω—ã–π —Å–ª–æ—Ç */
                            const freeSlot = newSlots.findIndex(slot => slot === null);
                            if (freeSlot !== -1) newSlots[freeSlot] = photo;
                        }
                    });
                    setSlots(newSlots); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª–æ—Ç—ã */
                }
            })
            .catch(error => { /* –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ */
                console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:", error); /* –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É */
                setErrorMessage("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π."); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ */
                setSlots([null, null, null]); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–ª–æ—Ç—ã */
            });
    }, [perevalId]); /* –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç perevalId */

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–ª–æ—Ç–∞ */
    const handleImageChange = (index: number, e: React.ChangeEvent<HTMLInputElement>) => {
        const files = e.target.files; /* –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã */
        if (files && files.length > 0) { /* –ï—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–±—Ä–∞–Ω */
            const file = files[0]; /* –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª */
            const newImage: ImageData = {
                file,
                preview: URL.createObjectURL(file), /* –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –ø—Ä–µ–≤—å—é */
                uploaded: false /* –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ */
            };
            setSlots(prev => {
                const updated = [...prev];
                updated[index] = newImage; /* –ü–æ–º–µ—â–∞–µ–º –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ª–æ—Ç */
                return updated;
            });
            setErrorMessage(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É */
            e.target.value = ""; /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º input –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ */
        }
    };

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Drag-and-Drop */
    const handleDrop = (index: number, e: React.DragEvent<HTMLDivElement>) => {
        e.preventDefault(); /* –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ */
        const files = e.dataTransfer.files; /* –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª—ã */
        if (files && files.length > 0) { /* –ï—Å–ª–∏ —Ñ–∞–π–ª –ø–µ—Ä–µ—Ç–∞—â–µ–Ω */
            const file = files[0]; /* –ë–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Ñ–∞–π–ª */
            if (!file.type.startsWith("image/")) { /* –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */
                setErrorMessage("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!"); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É */
                return;
            }
            const newImage: ImageData = {
                file,
                preview: URL.createObjectURL(file), /* –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º URL –ø—Ä–µ–≤—å—é */
                uploaded: false /* –§–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ */
            };
            setSlots(prev => {
                const updated = [...prev];
                updated[index] = newImage; /* –ü–æ–º–µ—â–∞–µ–º –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ª–æ—Ç */
                return updated;
            });
            setErrorMessage(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É */
        }
    };

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è dragover */
    const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {
        e.preventDefault(); /* –†–∞–∑—Ä–µ—à–∞–µ–º drop */
    };

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ñ–æ—Ç–æ */
    const handleDeleteLocal = (index: number) => {
        setSlots(prev => {
            const updated = [...prev];
            if (updated[index] && (updated[index] as ImageData).preview) {
                URL.revokeObjectURL((updated[index] as ImageData).preview); /* –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–∞–º—è—Ç—å */
            }
            updated[index] = null; /* –û—á–∏—â–∞–µ–º —Å–ª–æ—Ç */
            return updated;
        });
        setErrorMessage(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É */
    };

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ç–æ */
    const handleDeleteServer = async (photoId: number, index: number) => {
        if (showConfirmDelete === null) { /* –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –µ—â—ë –Ω–µ –ø–æ–∫–∞–∑–∞–Ω–æ */
            setShowConfirmDelete(photoId); /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ */
            return;
        }

        if (showConfirmDelete === photoId) { /* –ï—Å–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ñ–æ—Ç–æ */
            const email = localStorage.getItem("user_email"); /* –ü–æ–ª—É—á–∞–µ–º email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
            if (!email) { /* –ï—Å–ª–∏ email –Ω–µ—Ç */
                setErrorMessage("‚ùå Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ."); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É */
                setShowConfirmDelete(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ */
                return;
            }

            try {
                const response = await fetch(`${DELETE_API_URL}${photoId}/`, { /* –ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ */
                    method: "DELETE",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({ email }) /* –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email */
                });

                const data = await response.json(); /* –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç */
                if (response.status === 200 && data.state === 1) { /* –ï—Å–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ */
                    setSlots(prev => {
                        const updated = [...prev];
                        updated[index] = null; /* –û—á–∏—â–∞–µ–º —Å–ª–æ—Ç */
                        return updated;
                    });
                    setErrorMessage(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É */
                } else if (response.status === 400) { /* –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–¥–∞–ª–∏—Ç—å */
                    setErrorMessage(`‚ùå ${data.message || "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ: —Å—Ç–∞—Ç—É—Å –Ω–µ new"}`); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É */
                } else if (response.status === 403) { /* –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ */
                    setErrorMessage(`‚ùå ${data.message || "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —ç—Ç–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"}`); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É */
                } else if (response.status === 404) { /* –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ */
                    setErrorMessage(`‚ùå ${data.message || "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}`); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É */
                } else {
                    throw new Error("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏"); /* –î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞ */
                }
            } catch (error) { /* –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏ */
                console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏:", error); /* –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É */
                setErrorMessage("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏"); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ */
            } finally {
                setShowConfirmDelete(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ */
            }
        }
    };

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä */
    const handleUpload = async (index: number) => {
        const image = slots[index] as ImageData; /* –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ */
        if (!image || image.uploaded) { /* –ï—Å–ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –∏–ª–∏ —Å–ª–æ—Ç –ø—É—Å—Ç */
            setErrorMessage("‚ùå –≠—Ç–æ —Ñ–æ—Ç–æ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!"); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫—É */
            return;
        }

        setUploading(index); /* –í–∫–ª—é—á–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */
        const formData = new FormData(); /* –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã */
        formData.append("pereval_id", perevalId!); /* –î–æ–±–∞–≤–ª—è–µ–º ID –ø–µ—Ä–µ–≤–∞–ª–∞ */
        formData.append("image", image.file); /* –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª */
        const prefix = index === 0 ? "1_" : index === 1 ? "2_" : "3_"; /* –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å */
        formData.append("title", `${prefix}${image.file.name}`); /* –î–æ–±–∞–≤–ª—è–µ–º –∏–º—è —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º */

        try {
            const response = await fetch(IMAGE_API_URL, { /* –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É */
                method: "POST",
                body: formData
            });
            const data = await response.json(); /* –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç */
            if (!response.ok) throw new Error(data.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏"); /* –û—à–∏–±–∫–∞, –µ—Å–ª–∏ –Ω–µ 200 */

            setSlots(prev => {
                const updated = [...prev];
                updated[index] = { ...image, uploaded: true }; /* –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ */
                return updated;
            });

            /* –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã */
            const allUploaded = slots.every(slot => !slot || (slot as ImageData).uploaded || (slot as Photo).id);
            if (allUploaded) { /* –ï—Å–ª–∏ –≤—Å–µ —Å–ª–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∏–ª–∏ –ø—É—Å—Ç—ã */
                setTimeout(() => navigate(`/pereval/${perevalId}`), 1000); /* –ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—è–º —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É */
            }
        } catch (error) { /* –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ */
            console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", error); /* –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É */
            setErrorMessage(`‚ùå –û—à–∏–±–∫–∞: ${(error as Error).message}`); /* –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ */
        } finally {
            setUploading(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */
        }
    };

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ñ–æ—Ç–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è */
    const handleImageClick = (preview: string) => {
        setSelectedImage(preview); /* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ */
    };

    /* –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */
    const closeModal = () => {
        setSelectedImage(null); /* –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ */
        setShowConfirmDelete(null); /* –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è */
    };

    return ( /* JSX –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ */
        <div className={`upload-photos-container ${darkMode ? "dark-mode" : "light-mode"}`}> {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —Ç–µ–º–æ–π */
            <h1 className="upload-photos-title">
                {slots.every(slot => slot === null) ? "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π" : "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"} –¥–ª—è –ø–µ—Ä–µ–≤–∞–ª–∞ #{perevalId}
            </h1> {/* –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
            {errorMessage && <p className="error-message">{errorMessage}</p>} {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}

            <div className="photo-slots"> {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ª–æ—Ç–æ–≤ */}
                {slots.map((slot, index) => (
                    <div key={index} className="photo-slot"> {/* –°–ª–æ—Ç –¥–ª—è —Ñ–æ—Ç–æ */}
                        {slot === null ? (
                            /* –ü—É—Å—Ç–æ–π —Å–ª–æ—Ç */
                            <label className="photo-placeholder" onDragOver={handleDragOver} onDrop={(e) => handleDrop(index, e)}>
                                <input
                                    type="file"
                                    accept="image/*"
                                    onChange={(e) => handleImageChange(index, e)}
                                    className="hidden-input"
                                />
                                <span className="slot-label">–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ, –Ω–∞–∂–∞–≤ –∑–¥–µ—Å—å</span>
                                <span className="slot-label slot-title">{slotLabels[index]}</span>
                            </label>
                        ) : (slot as ImageData).file ? (
                            /* –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ñ–æ—Ç–æ */
                            <div className="image-item">
                                <img
                                    src={(slot as ImageData).preview}
                                    alt={slotLabels[index]}
                                    className="image-preview"
                                    onClick={() => handleImageClick((slot as ImageData).preview)}
                                />
                                <span className="slot-label slot-title">{slotLabels[index]}</span>
                                <div className="image-actions">
                                    <button
                                        onClick={() => handleUpload(index)}
                                        className="submit-btn"
                                        disabled={(slot as ImageData).uploaded || uploading === index}
                                    >
                                        {(slot as ImageData).uploaded ? "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ" : uploading === index ? (
                                            <span className="spinner"></span>
                                        ) : (
                                            "–û—Ç–ø—Ä–∞–≤–∏—Ç—å"
                                        )}
                                    </button>
                                    <button
                                        onClick={() => handleDeleteLocal(index)}
                                        className="delete-btn"
                                        disabled={(slot as ImageData).uploaded}
                                    >
                                        –£–¥–∞–ª–∏—Ç—å
                                    </button>
                                </div>
                            </div>
                        ) : (
                            /* –°–µ—Ä–≤–µ—Ä–Ω–æ–µ —Ñ–æ—Ç–æ */
                            <div className="photo-item">
                                <img
                                    src={`${MEDIA_URL}${(slot as Photo).file_name.replace("\\", "/")}`}
                                    alt={(slot as Photo).title || (slot as Photo).file_name}
                                    className="image-preview"
                                    onClick={() =>
                                        handleImageClick(`${MEDIA_URL}${(slot as Photo).file_name.replace("\\", "/")}`)
                                    }
                                />
                                <span className="slot-label slot-title">{slotLabels[index]}</span>
                                <div className="image-actions">
                                    <button
                                        onClick={() => handleDeleteServer((slot as Photo).id, index)}
                                        className="delete-btn"
                                    >
                                        –£–¥–∞–ª–∏—Ç—å
                                    </button>
                                </div>
                                {showConfirmDelete === (slot as Photo).id && (
                                    <div className="confirm-modal">
                                        <div className="confirm-modal-content">
                                            <p>–í—ã —É–≤–µ—Ä–µ–Ω—ã? –§–æ—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ —Å —Å–µ—Ä–≤–µ—Ä–∞ –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.</p>
                                            <button
                                                onClick={() => handleDeleteServer((slot as Photo).id, index)}
                                                className="submit-btn"
                                            >
                                                –î–∞
                                            </button>
                                            <button onClick={closeModal} className="delete-btn">
                                                –ù–µ—Ç
                                            </button>
                                        </div>
                                    </div>
                                )}
                            </div>
                        )}
                    </div>
                ))}
            </div>

            {selectedImage && (
                /* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ */
                <div className="modal" onClick={closeModal}>
                    <img src={selectedImage} alt="–£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ" className="modal-image" />
                </div>
            )}
            <button onClick={toggleTheme} className="theme-btn">
                {darkMode ? "–°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞" : "–¢—ë–º–Ω–∞—è —Ç–µ–º–∞"}
            </button> {/* –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã —Ç–µ–º—ã */}
        </div>
    );
};

export default PhotosManager; /* –≠–∫—Å–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ */