import { ImageData, PerevalFormData } from "../pages/EditPereval";
import { generateFileName } from "./generateFileName";

const IMAGE_API_URL = "https://rostislav62.pythonanywhere.com/api/uploadImage/";

export const uploadImages = async (
  formData: PerevalFormData,
  initialFormData: PerevalFormData,
  perevalId: string,
  slotLabels: string[]
): Promise<void> => {
  // üìå –®–∞–≥ 1: –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –∑–∞–º–µ–Ω–µ–Ω—ã –∏–ª–∏ —É–¥–∞–ª–µ–Ω—ã
  for (let index = 0; index < 3; index++) {
    const currentImage = formData.images[index];
    const initialImage = initialFormData.images[index];

    // üìå –£–¥–∞–ª—è–µ–º, –µ—Å–ª–∏ —Å–ª–æ—Ç –æ—á–∏—â–µ–Ω (–±—ã–ª–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –∞ —Ç–µ–ø–µ—Ä—å null)
    if (initialImage && !currentImage) {
      console.log(`üóëÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ID ${initialImage.id}: ${initialImage.title}`);
      try {
        const response = await fetch(`${IMAGE_API_URL}delete/${initialImage.id}/`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email: formData.user.email }),
        });

        if (response.ok) {
          const data = await response.json();
          console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ID ${initialImage.id} —É–¥–∞–ª–µ–Ω–æ:`, data.message);
        } else {
          const errorData = await response.json();
          console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ID ${initialImage.id}:`, errorData.message || response.statusText);
        }
      } catch (error) {
        console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —É–¥–∞–ª–µ–Ω–∏—è ID ${initialImage.id}:`, error);
      }
    }

    // üìå –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞–º–µ–Ω–µ–Ω–∞ –Ω–æ–≤–æ–π
    if (currentImage && currentImage.isModified && initialImage && initialImage.id) {
      console.log(`üóëÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ID ${initialImage.id}: ${initialImage.title}`);
      try {
        const response = await fetch(`${IMAGE_API_URL}delete/${initialImage.id}/`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email: formData.user.email }),
        });

        if (response.ok) {
          const data = await response.json();
          console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ID ${initialImage.id} —É–¥–∞–ª–µ–Ω–æ:`, data.message);
        } else {
          const errorData = await response.json();
          console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ID ${initialImage.id}:`, errorData.message || response.statusText);
        }
      } catch (error) {
        console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —É–¥–∞–ª–µ–Ω–∏—è ID ${initialImage.id}:`, error);
      }
    }
  }

  // üìå –®–∞–≥ 2: –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Å–ª–æ—Ç–∞–º
  for (let index = 0; index < 3; index++) {
    const image = formData.images[index];
    if (image && image.isModified && image.file) {
      const fileName = generateFileName(index, formData.title, image.file);
      const formDataUpload = new FormData();
      formDataUpload.append("image", image.file);
      formDataUpload.append("title", fileName);
      formDataUpload.append("file_name", fileName);
      formDataUpload.append("pereval_id", perevalId);

      console.log(`üì∑ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–ª–æ—Ç ${index} (${slotLabels[index]}): ${fileName}`);

      try {
        const response = await fetch(IMAGE_API_URL, {
          method: "POST",
          body: formDataUpload,
        });

        const uploadData = await response.json();
        if (!response.ok) {
          console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ${fileName}:`, uploadData.message || response.statusText);
        } else {
          console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ${fileName} –∑–∞–≥—Ä—É–∂–µ–Ω–æ: image_id=${uploadData.image_id}`);
        }
      } catch (error) {
        console.error(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∑–∞–≥—Ä—É–∑–∫–∏ ${fileName}:`, error);
      }
    }
  }
};